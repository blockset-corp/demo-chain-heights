# Generated by Django 3.1.6 on 2021-06-24 16:56

import django.contrib.postgres.fields
from django.db import migrations, models
import django.db.models.deletion


def create_services(apps, schema_editor):
    Service = apps.get_model('app', 'Service')
    Service.objects.create(name='Full Node', slug='fullnode')

    IntervalSchedule = apps.get_model('django_celery_beat', 'IntervalSchedule')
    PeriodicTask = apps.get_model('django_celery_beat', 'PeriodicTask')

    schedule, _ = IntervalSchedule.objects.get_or_create(
        every=1, period='minutes'
    )

    PeriodicTask.objects.create(
        interval=schedule,
        name='Validate all blockchains',
        task='app.tasks.validate_all_blockchains'
    )


class Migration(migrations.Migration):

    dependencies = [
        ('app', '0019_auto_20210217_0855'),
    ]

    operations = [
        migrations.CreateModel(
            name='BlockValidationInstance',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('start_height', models.PositiveBigIntegerField()),
                ('end_height', models.PositiveBigIntegerField()),
                ('started', models.DateTimeField()),
                ('completed', models.DateTimeField(null=True)),
                ('timed_out', models.BooleanField(default=False)),
                ('blockchain', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='app.blockchain')),
            ],
        ),
        migrations.AddField(
            model_name='blockchainmeta',
            name='mainnet_finality_depth',
            field=models.PositiveIntegerField(default=6, help_text='Number of blocks behind which blocks will never change on mainnets'),
        ),
        migrations.AddField(
            model_name='blockchainmeta',
            name='testnet_finality_depth',
            field=models.PositiveIntegerField(default=6, help_text='Number of blocks behind which blocks will never change on testnets'),
        ),
        migrations.AlterField(
            model_name='checkinstance',
            name='type',
            field=models.CharField(choices=[('bh', 'Block Height'), ('p', 'Ping'), ('bv', 'Block Validation')], db_column='check_type', max_length=2),
        ),
        migrations.CreateModel(
            name='BlockValidationResult',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('started', models.DateTimeField()),
                ('duration', models.PositiveBigIntegerField(help_text='Duration in milliseconds')),
                ('status', models.CharField(choices=[('ok', 'Ok'), ('er', 'Error'), ('wr', 'Warn')], max_length=2)),
                ('height', models.PositiveBigIntegerField(help_text='Height of this check')),
                ('error', models.TextField(default='')),
                ('block_hash', models.CharField(help_text='The block hash as reported by the service', max_length=128)),
                ('transaction_ids', django.contrib.postgres.fields.ArrayField(base_field=models.CharField(blank=True, max_length=128), help_text='The transaction IDs as reported by the service', size=None)),
                ('is_canonical', models.BooleanField(default=False, help_text='Whether this block represents a complete block that other results may be compared against. The canonical block result is typically the one with the highest number of transactions. There can be multiple canonical blocks for the same height if they are all alike. There may also be no canonical blocks if none agree')),
                ('hash_mismatch', models.BooleanField(default=False, help_text='Whether the block_hash is incorrect when compared to a canonical block check result')),
                ('missing_transaction_ids', django.contrib.postgres.fields.ArrayField(base_field=models.CharField(blank=True, max_length=128), help_text='Transaction IDs missing when compared to a canonical block check result', size=None)),
                ('blockchain', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='app.blockchain')),
                ('canonical_result', models.ForeignKey(help_text='The canonical block check result for this block height (null if this block is canonical)', null=True, on_delete=django.db.models.deletion.CASCADE, to='app.blockvalidationresult')),
                ('error_details', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to='app.checkerror')),
                ('service', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='app.service')),
                ('validation_instance', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='app.blockvalidationinstance')),
            ],
        ),
        migrations.RunPython(create_services)
    ]
