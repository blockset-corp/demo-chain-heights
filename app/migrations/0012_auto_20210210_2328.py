# Generated by Django 3.1.6 on 2021-02-10 23:28

import django.contrib.postgres.fields
from django.db import migrations, models
import django.db.models.deletion


def create_blockchain_metas(apps, schema_editor):
    Blockchain = apps.get_model('app', 'Blockchain')

    for blockchain in Blockchain.objects.filter():
        print(f'updating {blockchain.slug}')
        blockchain.create_meta_if_not_exists()


class Migration(migrations.Migration):

    dependencies = [
        ('app', '0011_auto_20210210_1852'),
    ]

    operations = [
        migrations.CreateModel(
            name='BlockchainMeta',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('display_name', models.CharField(help_text='Well-known proper noun for this blockchain', max_length=60)),
                ('chain_slug', models.SlugField(help_text='Common slug for this blockchain not including network prefix')),
                ('mainnet_slug', models.CharField(default='mainnet', max_length=50)),
                ('testnet_slugs', django.contrib.postgres.fields.ArrayField(base_field=models.CharField(blank=True, max_length=25), help_text='Testnet slug (or slugs) such as "testnet" or "ropsten"', size=None)),
                ('height_tolerance_success', models.IntegerField(default=0, help_text='Number of blocks behind that is considered OK')),
                ('height_tolerance_warning', models.IntegerField(default=1, help_text='Number of blocks behind that should emit a warning')),
                ('height_tolerance_error', models.IntegerField(default=2, help_text='Number of blocks behind that should sound the alarms')),
            ],
        ),
        migrations.AlterField(
            model_name='service',
            name='bulk_chain_query',
            field=models.BooleanField(default=False, help_text='Whether or not to fetch chain height updates in bulk'),
        ),
        migrations.AddField(
            model_name='blockchain',
            name='meta',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to='app.blockchainmeta'),
        ),
        migrations.RunPython(create_blockchain_metas)
    ]
